{
    "categories": {
      "HTML Fundamentals": [
        {
          "id": "html1",
          "question": "What does HTML stand for?",
          "options": [
            "HyperText Markup Language",
            "HighText Machine Language",
            "HyperTransfer Markup Language",
            "HyperText and links Markup Language"
          ],
          "answer": "HyperText Markup Language"
        },
        {
          "id": "html2",
          "question": "Which HTML tag is used to define an internal style sheet?",
          "options": ["<style>", "<script>", "<css>", "<link>"],
          "answer": "<style>"
        },
        {
          "id": "html3",
          "question": "Which HTML element is used to specify a footer for a document or section?",
          "options": ["<footer>", "<bottom>", "<section-footer>", "<foot>"],
          "answer": "<footer>"
        },
        {
          "id": "html4",
          "question": "What is the correct HTML element for inserting a line break?",
          "options": ["<br>", "<lb>", "<break>", "<newline>"],
          "answer": "<br>"
        },
        {
          "id": "html5",
          "question": "Which HTML attribute specifies an alternate text for an image, if the image cannot be displayed?",
          "options": ["alt", "src", "title", "longdesc"],
          "answer": "alt"
        },
        {
          "id": "html6",
          "question": "Which doctype is correct for HTML5?",
          "options": ["<!DOCTYPE html>", "<!DOCTYPE HTML PUBLIC '-//W3C//DTD HTML 4.01//EN'>", "<!DOCTYPE HTML5>", "<!DOCTYPE html PUBLIC '-//W3C//DTD XHTML 1.0 Transitional//EN'>"],
          "answer": "<!DOCTYPE html>"
        },
        {
          "id": "html7",
          "question": "Which HTML element is used for the largest heading?",
          "options": ["<h1>", "<heading>", "<h6>", "<head>"],
          "answer": "<h1>"
        },
        {
          "id": "html8",
          "question": "What is the correct HTML for creating a hyperlink?",
          "options": ["<a href='url'>link text</a>", "<link src='url'>link text</link>", "<a>url</a>", "<hyperlink>url</hyperlink>"],
          "answer": "<a href='url'>link text</a>"
        },
        {
          "id": "html9",
          "question": "How can you open a link in a new tab/browser window?",
          "options": ["<a href='url' target='_blank'>", "<a href='url' new>", "<a href='url' target='new'>", "<a href='url' open='new_tab'>"],
          "answer": "<a href='url' target='_blank'>"
        },
        {
          "id": "html10",
          "question": "Which of these elements are all <table> elements?",
          "options": ["<table><tr><td>", "<table><head><tfoot>", "<thead><body><tr>", "<table><tr><tt>"],
          "answer": "<table><tr><td>"
        },
        {
          "id": "html11",
          "question": "How can you make a numbered list?",
          "options": ["<ol>", "<ul>", "<dl>", "<list>"],
          "answer": "<ol>"
        },
        {
          "id": "html12",
          "question": "What is the correct HTML for making a checkbox?",
          "options": ["<input type='checkbox'>", "<checkbox>", "<check>", "<input type='check'>"],
          "answer": "<input type='checkbox'>"
        },
        {
          "id": "html13",
          "question": "Which HTML element defines navigation links?",
          "options": ["<nav>", "<navigate>", "<navigation>", "<links>"],
          "answer": "<nav>"
        },
        {
          "id": "html14",
          "question": "In HTML, which attribute is used to specify that an input field must be filled out?",
          "options": ["required", "placeholder", "validate", "mandatory"],
          "answer": "required"
        },
        {
          "id": "html15",
          "question": "Which HTML tag is used to define a paragraph?",
          "options": ["<p>", "<par>", "<paragraph>", "<text>"],
          "answer": "<p>"
        },
        {
          "id": "html16",
          "question": "What does the <aside> element define?",
          "options": ["Content aside from the page content", "A navigation list", "The main content", "A header section"],
          "answer": "Content aside from the page content"
        },
        {
          "id": "html17",
          "question": "Which HTML element is used to display a scalar measurement within a known range (a gauge)?",
          "options": ["<meter>", "<gauge>", "<range>", "<progress>"],
          "answer": "<meter>"
        },
        {
          "id": "html18",
          "question": "What is the purpose of the <canvas> element?",
          "options": ["To draw graphics, on the fly, via scripting (usually JavaScript)", "To display tabular data", "To embed video content", "To create a container for an iframe"],
          "answer": "To draw graphics, on the fly, via scripting (usually JavaScript)"
        },
        {
          "id": "html19",
          "question": "Which input type defines a slider control?",
          "options": ["range", "slider", "scroll", "number"],
          "answer": "range"
        },
        {
          "id": "html20",
          "question": "What is the correct HTML element for playing video files?",
          "options": ["<video>", "<media>", "<movie>", "<stream>"],
          "answer": "<video>"
        }
      ],
      "Javascript Basics": [
        {
          "id": "js1",
          "question": "What keyword is used to declare a variable in JavaScript?",
          "options": ["var", "let", "const", "all of the above"],
          "answer": "all of the above"
        },
        {
          "id": "js2",
          "question": "Which company developed JavaScript?",
          "options": ["Netscape", "Microsoft", "Sun Microsystems", "Google"],
          "answer": "Netscape"
        },
        {
          "id": "js3",
          "question": "What is `typeof null`?",
          "options": ["object", "null", "undefined", "string"],
          "answer": "object"
        },
        {
          "id": "js4",
          "question": "Which method is used to write to the browser console?",
          "options": ["console.log()", "document.write()", "window.alert()", "console.write()"],
          "answer": "console.log()"
        },
        {
          "id": "js5",
          "question": "What does 'NaN' stand for?",
          "options": ["Not a Number", "No Available Name", "Null and None", "Negative Absolute Number"],
          "answer": "Not a Number"
        },
        {
          "id": "js6",
          "question": "How do you create a function in JavaScript?",
          "options": ["function myFunction()", "def myFunction():", "create function myFunction()", "function:myFunction()"],
          "answer": "function myFunction()"
        },
        {
          "id": "js7",
          "question": "How do you call a function named 'myFunction'?",
          "options": ["myFunction()", "call myFunction()", "execute myFunction", "myFunction.call"],
          "answer": "myFunction()"
        },
        {
          "id": "js8",
          "question": "How to write an IF statement in JavaScript?",
          "options": ["if (i == 5)", "if i = 5 then", "if i == 5 then", "if i = 5"],
          "answer": "if (i == 5)"
        },
        {
          "id": "js9",
          "question": "How does a FOR loop start?",
          "options": ["for (i = 0; i <= 5; i++)", "for (i = 0; i <= 5)", "for i = 1 to 5", "for (i <= 5; i++)"],
          "answer": "for (i = 0; i <= 5; i++)"
        },
        {
          "id": "js10",
          "question": "How can you add a comment in JavaScript?",
          "options": ["//This is a comment", "", "'This is a comment", "/* This is a comment */"],
          "answer": "//This is a comment"
        },
        {
          "id": "js11",
          "question": "What is the correct way to write a JavaScript array?",
          "options": ["var colors = ['red', 'green', 'blue']", "var colors = (1:'red', 2:'green', 3:'blue')", "var colors = 'red', 'green', 'blue'", "var colors = 1 = ('red'), 2 = ('green')"],
          "answer": "var colors = ['red', 'green', 'blue']"
        },
        {
          "id": "js12",
          "question": "Which event occurs when the user clicks on an HTML element?",
          "options": ["onclick", "onmouseclick", "onchange", "onmouseover"],
          "answer": "onclick"
        },
        {
          "id": "js13",
          "question": "How do you declare a JavaScript variable that cannot be reassigned?",
          "options": ["const", "let", "var", "static"],
          "answer": "const"
        },
        {
          "id": "js14",
          "question": "Which operator is used for strict equality (value and type) in JavaScript?",
          "options": ["===", "==", "=", "!="],
          "answer": "==="
        },
        {
          "id": "js15",
          "question": "What will `Boolean('false')` return?",
          "options": ["true", "false", "NaN", "undefined"],
          "answer": "true"
        },
        {
          "id": "js16",
          "question": "Which built-in method removes the last element from an array and returns that element?",
          "options": ["pop()", "push()", "shift()", "unshift()"],
          "answer": "pop()"
        },
        {
          "id": "js17",
          "question": "What is the purpose of the `this` keyword in JavaScript?",
          "options": ["Refers to the object from which a function was called", "Refers to the current HTML document", "Refers to the global window object", "Refers to the parent element"],
          "answer": "Refers to the object from which a function was called"
        },
        {
          "id": "js18",
          "question": "How do you find the number with the highest value of x and y?",
          "options": ["Math.max(x, y)", "Math.ceil(x, y)", "top(x, y)", "Math.highest(x,y)"],
          "answer": "Math.max(x, y)"
        },
        {
          "id": "js19",
          "question": "What is JSON?",
          "options": ["JavaScript Object Notation", "Java Standard Output Network", "JavaScript Oriented Netscape", "Java Source Open Network"],
          "answer": "JavaScript Object Notation"
        },
        {
          "id": "js20",
          "question": "Which method can be used to convert a JSON string into a JavaScript object?",
          "options": ["JSON.parse()", "JSON.stringify()", "JSON.toObject()", "JSON.convert()"],
          "answer": "JSON.parse()"
        }
      ],
      "CSS Flexbox": [
        {
          "id": "flex1",
          "question": "Which property is used to make a container a flex container?",
          "options": [
            "display: flex;",
            "flex-direction: row;",
            "align-items: center;",
            "justify-content: space-between;"
          ],
          "answer": "display: flex;"
        },
        {
          "id": "flex2",
          "question": "What does `justify-content: center;` do in a flex container?",
          "options": [
            "Aligns items to the center of the main axis",
            "Aligns items to the center of the cross axis",
            "Stretches items to fill the container",
            "Distributes space around items"
          ],
          "answer": "Aligns items to the center of the main axis"
        },
        {
          "id": "flex3",
          "question": "Which `align-items` value stretches flex items to fill the container's cross axis?",
          "options": ["stretch", "center", "flex-start", "baseline"],
          "answer": "stretch"
        },
        {
          "id": "flex4",
          "question": "The `flex-direction` property defines:",
          "options": ["The direction flex items are placed in the flex container", "The direction of the text", "The direction of the container itself", "How items wrap"],
          "answer": "The direction flex items are placed in the flex container"
        },
        {
          "id": "flex5",
          "question": "What does `flex-wrap: wrap;` do?",
          "options": ["Allows items to wrap to the next line if there isn't enough space", "Reverses the order of items", "Makes items shrink to fit", "Stretches items"],
          "answer": "Allows items to wrap to the next line if there isn't enough space"
        },
        {
          "id": "flex6",
          "question": "The `order` property for a flex item:",
          "options": ["Controls the order in which items appear in the flex container", "Orders items alphabetically", "Sets the z-index", "Is not a valid flex property"],
          "answer": "Controls the order in which items appear in the flex container"
        },
        {
          "id": "flex7",
          "question": "Which property aligns a single flex item on the cross-axis, overriding `align-items`?",
          "options": ["align-self", "justify-self", "place-self", "self-align"],
          "answer": "align-self"
        },
        {
          "id": "flex8",
          "question": "`flex-grow: 1;` on a flex item means:",
          "options": ["The item will take up available space along the main axis", "The item will grow to 100px", "The item is the first item", "The item has a fixed size"],
          "answer": "The item will take up available space along the main axis"
        },
        {
          "id": "flex9",
          "question": "What is the default value of `flex-direction`?",
          "options": ["row", "column", "row-reverse", "column-reverse"],
          "answer": "row"
        },
        {
          "id": "flex10",
          "question": "To distribute space evenly between flex items, you can use:",
          "options": ["justify-content: space-around;", "justify-content: flex-start;", "align-content: space-between;", "gap: auto;"],
          "answer": "justify-content: space-around;"
        },
        {
          "id": "flex11",
          "question": "The `flex-basis` property specifies:",
          "options": ["The initial main size of a flex item", "The base font size", "The minimum width of an item", "The maximum height of an item"],
          "answer": "The initial main size of a flex item"
        },
        {
          "id": "flex12",
          "question": "Which is a shorthand property for `flex-grow`, `flex-shrink`, and `flex-basis`?",
          "options": ["flex", "flex-flow", "flex-item", "flex-container"],
          "answer": "flex"
        },
        {
          "id": "flex13",
          "question": "What does `align-content: space-between;` do when there are multiple lines of flex items?",
          "options": ["Distributes lines with space between them", "Aligns lines to the start of the cross axis", "Centers lines in the cross axis", "Stretches lines to fill the cross axis"],
          "answer": "Distributes lines with space between them"
        },
        {
          "id": "flex14",
          "question": "If a flex container has `flex-direction: column;`, what is its main axis?",
          "options": ["Vertical", "Horizontal", "Depends on `justify-content`", "Depends on `align-items`"],
          "answer": "Vertical"
        },
        {
          "id": "flex15",
          "question": "The `gap` property in Flexbox is a shorthand for:",
          "options": ["`row-gap` and `column-gap`", "`flex-gap` and `item-gap`", "`margin-gap` and `padding-gap`", "`grid-gap` (it's a Grid property)"],
          "answer": "`row-gap` and `column-gap`"
        },
        {
          "id": "flex16",
          "question": "Which value of `align-items` aligns items to the start of the cross axis?",
          "options": ["flex-start", "start", "top", "begin"],
          "answer": "flex-start"
        },
        {
          "id": "flex17",
          "question": "What is the effect of `flex-shrink: 0;` on a flex item?",
          "options": ["The item will not shrink even if there is not enough space", "The item will shrink to its minimum size", "The item will be removed if there's no space", "The item will shrink proportionally less than others"],
          "answer": "The item will not shrink even if there is not enough space"
        },
        {
          "id": "flex18",
          "question": "How can you reverse the order of flex items along the main axis?",
          "options": ["Using `flex-direction: row-reverse;` or `column-reverse;`", "Using `order: -1;` on all items", "Using `flex-flow: reverse;`", "It's not possible with Flexbox"],
          "answer": "Using `flex-direction: row-reverse;` or `column-reverse;`"
        },
        {
          "id": "flex19",
          "question": "The `flex-flow` property is a shorthand for:",
          "options": ["`flex-direction` and `flex-wrap`", "`flex-grow` and `flex-shrink`", "`align-items` and `justify-content`", "`flex-basis` and `order`"],
          "answer": "`flex-direction` and `flex-wrap`"
        },
        {
          "id": "flex20",
          "question": "What does `justify-content: flex-end;` do?",
          "options": ["Aligns flex items to the end of the main axis", "Aligns flex items to the bottom of the cross axis", "Aligns items to the right, regardless of main axis", "Pushes items to the far right"],
          "answer": "Aligns flex items to the end of the main axis"
        }
      ],
      "CSS Grid": [
        {
          "id": "grid1",
          "question": "Which property is used to make a container a grid container?",
          "options": [
            "display: grid;",
            "grid-template-columns: auto;",
            "grid-gap: 10px;",
            "position: grid;"
          ],
          "answer": "display: grid;"
        },
        {
          "id": "grid2",
          "question": "How do you define three columns of equal width in CSS Grid?",
          "options": [
            "grid-template-columns: 1fr 1fr 1fr;",
            "grid-columns: 3;",
            "columns: 1fr 1fr 1fr;",
            "grid-template: repeat(3, 1fr);"
          ],
          "answer": "grid-template-columns: 1fr 1fr 1fr;"
        },
        {
          "id": "grid3",
          "question": "What does the `grid-gap` property define? (or its modern equivalent `gap`)",
          "options": ["The space between grid cells (gutters)", "The size of the grid tracks", "The alignment of items within the grid", "The overall width of the grid"],
          "answer": "The space between grid cells (gutters)"
        },
        {
          "id": "grid4",
          "question": "The `fr` unit in CSS Grid stands for:",
          "options": ["Fractional unit", "Free space ratio", "Fixed ratio", "Frame resolution"],
          "answer": "Fractional unit"
        },
        {
          "id": "grid5",
          "question": "How can you make a grid item span 2 columns starting from column line 1?",
          "options": ["grid-column: 1 / 3;", "grid-column-span: 2;", "grid-area: 1 / 1 / 1 / 3;", "column-span: 2;"],
          "answer": "grid-column: 1 / 3;"
        },
        {
          "id": "grid6",
          "question": "Which property is a shorthand for `grid-row-gap` and `grid-column-gap`?",
          "options": ["gap", "grid-spacing", "gutter", "grid-margin"],
          "answer": "gap"
        },
        {
          "id": "grid7",
          "question": "`grid-auto-flow: column;` will:",
          "options": ["Fill the grid column by column", "Create columns automatically", "Make all items flow into one column", "Reverse the column order"],
          "answer": "Fill the grid column by column"
        },
        {
          "id": "grid8",
          "question": "To name grid areas, you use the property:",
          "options": ["grid-template-areas", "grid-area-names", "define-grid-areas", "grid-layout-areas"],
          "answer": "grid-template-areas"
        },
        {
          "id": "grid9",
          "question": "The `repeat()` function in `grid-template-columns` is used for:",
          "options": ["Repeating a track listing", "Repeating the grid display", "Repeating item content", "Repeating animations"],
          "answer": "Repeating a track listing"
        },
        {
          "id": "grid10",
          "question": "How do you align items along the block (column) axis within their grid area?",
          "options": ["align-items", "justify-items", "place-items", "align-content"],
          "answer": "align-items"
        },
        {
          "id": "grid11",
          "question": "What is the purpose of `grid-template-rows`?",
          "options": ["Defines the size and number of rows in a grid layout", "Defines the template for row content", "Automatically flows content into rows", "Sets the color of row lines"],
          "answer": "Defines the size and number of rows in a grid layout"
        },
        {
          "id": "grid12",
          "question": "To make a grid item start on row line 2 and end on row line 4, you use:",
          "options": ["grid-row: 2 / 4;", "grid-row-span: 2;", "grid-row-start: 2; grid-row-end: 3;", "row: 2-4;"],
          "answer": "grid-row: 2 / 4;"
        },
        {
          "id": "grid13",
          "question": "What does `justify-items: center;` do in a grid container?",
          "options": ["Centers items horizontally within their grid cell", "Centers items vertically within their grid cell", "Centers the entire grid within its parent", "Centers the content of each item"],
          "answer": "Centers items horizontally within their grid cell"
        },
        {
          "id": "grid14",
          "question": "The `grid-area` property is a shorthand for which properties?",
          "options": ["`grid-row-start`, `grid-column-start`, `grid-row-end`, `grid-column-end`", "`grid-template-rows` and `grid-template-columns`", "`grid-gap` and `grid-auto-flow`", "`display: grid` and `grid-template`"],
          "answer": "`grid-row-start`, `grid-column-start`, `grid-row-end`, `grid-column-end`"
        },
        {
          "id": "grid15",
          "question": "How can you explicitly place an item in the grid cell at the 2nd row and 3rd column?",
          "options": ["grid-row: 2; grid-column: 3;", "grid-position: 2 3;", "item-area: 2 / 3;", "cell: r2 c3;"],
          "answer": "grid-row: 2; grid-column: 3;"
        },
        {
          "id": "grid16",
          "question": "The `minmax()` function in CSS Grid is used to:",
          "options": ["Define a size range (minimum and maximum) for a grid track", "Find the minimum or maximum sized item", "Set the minimum and maximum number of columns", "Control the minimum and maximum gap size"],
          "answer": "Define a size range (minimum and maximum) for a grid track"
        },
        {
          "id": "grid17",
          "question": "What is the default value for `align-items` in a grid container?",
          "options": ["stretch", "start", "center", "end"],
          "answer": "stretch"
        },
        {
          "id": "grid18",
          "question": "To make an item span all columns in its row, you can use:",
          "options": ["grid-column: 1 / -1;", "grid-column: full;", "grid-column-span: 100%;", "column-span: all;"],
          "answer": "grid-column: 1 / -1;"
        },
        {
          "id": "grid19",
          "question": "The `z-index` property can be used with grid items to control stacking order, similar to positioned elements.",
          "options": ["True", "False", "Only if `position: absolute` is also used", "Only for items spanning multiple tracks"],
          "answer": "True"
        },
        {
          "id": "grid20",
          "question": "Which CSS Grid feature allows you to create responsive layouts by defining different grid structures at different viewport sizes?",
          "options": ["Media Queries with different grid properties", "Fluid grid tracks (using `fr` units)", "The `auto-fit` or `auto-fill` keywords with `repeat()`", "All of the above"],
          "answer": "All of the above"
        }
      ]
    }
  }
  